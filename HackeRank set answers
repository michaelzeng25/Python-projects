
1, set
def average(array):
    s=set(array)
    l = float(len(s))
    sum_s = float(sum(s))
    return("%1.3f"% (sum_s/l))
   
   
   


2, Symmetric Difference
a, b= [int(input()), input().split()]
c, d= [int(input()), input().split()]
setb = set(b)
setd = set(d)
setb2 = setb.difference(setd)
setd2 = setd.difference(setb)
q = setb2.union(setd2)
print('\n'.join(sorted(q,key=int)))

or

a,b = [set(input().split()) for _ in range(4)][1::2]
print(a)
print(b)
print ('\n'.join(sorted(a^b, key=int)))
#  [set(input().split()) for _ in range(4)]
# in this code, you will enter the size of the list then the actual list and repeat.
# 4, 1 2 2 4
# 4, 7 7 8 9
#[1::2] = [start:stop:step]. in the list above, list 1 and 3 are the actual lists while 0 and 2 are just the size of the list which is 4 here.
# so, set(1,2,2,4) will give 1,2,4. and set(7 7 8 9) will give 7 8 9. These 2 sets are string values.
#print ('\n'.join(sorted(a^b, key=int)))
# '\n'.join will join the list column down. if use ' '.join, the list will be at the same row and seprate by a space.
# a^b is sim







3, No Idea!

n, list1,set1,set2 = [(input().split()) for _ in range(4)][0::1]
list1 = map(int, list1)
set1 = set(map(int, set1))
set2 = set(map(int, set2))
happiness = sum([(i in set1)-(i in set2) for i in list1])
print(happiness)

Note:
(i in set1) gives how many time does i appear in set1 - as a
(i in set2) same idea - as b
so, a-b is the sum of like in A - dislikes in B. 




4, .add()
s = [input() for x in range(int(input()))]
print(len(set(s)))





5, Set .discard(), .remove() & .pop()

n = int(input())
s = set(map(int, input().split())) 
for i in range(int(input())):
    s2 = input().split()
    if(s2[0]=='pop'):
        s.pop()
    elif(s2[0]=='remove'):
        s.remove(int(s2[1]))
    else:
        s.discard(int(s2[1]))
print(sum(s))


Or another very smart solution from other guy:
n = int(input())
s = set(map(int, input().split())) 
for i in range(int(input())):
    eval('s.{0}({1})'.format(*input().split()+['']))
print(sum(s))

*input().split():
Asterisk expands list or tuple to positional arguments. If we have a=[1,2,3] then function(*a) is equal to function(1,2,3)

+[''} is for pop() because it does not have the second argument.

s.{0}({1}) - s.remove(4) where {0} is remove and ({1}) is (4)







6.set.union()
n, english = [input().split() for x in range(2)]
m, french = [input().split() for x in range(2)]
english = set(english)
french = set(french)
ef = english.union(french)
print(len(ef))

or

n, english,m, french = [input().split() for x in range(4)]
print(len(set(english).union(set(french))))







7, set mutations
A, SetA= (input().split() for x in range(2))
SetA = set(SetA)
for i in range(int(input())):
    eval('SetA.{0}({1})'.format(*input().split(), input().split()))
print(sum(map(int, SetA)))
    
