1, lists

list=[]
for i in range(int(input())):
    c = input().split()
    for l in range(1,len(c)):
        c[l]=int(c[l])
    if (c[0]=='insert'):
        list.insert(c[1], c[2])
    elif (c[0]=='remove'):
        list.remove(c[1])
    elif (c[0]=='append'):
        list.append(c[1])
    elif (c[0]=='sort'):
        list.sort()
    elif (c[0]=='pop'):
        list.pop()
    elif (c[0]=='reverse'):
        list.reverse()
    elif(c[0]=='print'):
        print(list)
or

list = []
for _ in range(int(input())):
    s = input().split()
    commands = s[0]
    values = s[1:]
    if commands !="print":
        commands += "("+ ",".join(values) +")"
        eval("list."+commands)
    else:
        print (list)



2, tuples

n = int(input())
list=input()
list=list.split()
list = [int(i) for i in list]
list=tuple(list)
print (hash(list))

/*
the first 2 lines just input the data.
the 3rd line split the string into a list of char values.
the 4th line convert the list into int type.
then convert the list into tuple and print it as hash.

*/

or shorter code

n = int(input())
list=input().split()
print (hash(tuple([int(i) for i in list])))



3, list comprehemssions
x,y,z,n = [int(input()) for _ in range(4)]
print ([[ i, j, k] for i in range( x + 1) for j in range( y + 1) for k in range(z+1) if ((i + j + k) != n) ])



4, runner up
n = int(input())
arr = input()
arr=arr.split()
arr = [int(x) for x in arr]
arr.sort()
arr.reverse()
tartget = arr[0]
for i in range(1,len(arr)):
    if (arr[i] < arr[0]):
        print (arr[i])
        break
        


5, Nested lists
list=[]
score_list=[]
n = int(input())
if __name__ == '__main__':
    for i in range(n):
        name = input()
        score = float(input())
        list.append([name, score])
        score_list.append(score)
        
    score_list = sorted(set(score_list)) # no dup in a set, so the second number will be the second lowest
    list.sort() # name will be sorted alphabetically
    
    for i in range(n):
        if (list[i][1] == score_list[1]):
            print(list[i][0])
   

6, finding the percentage

student_marks = {}
for _ in range(int(input())):
    name = input().split()
    scores = list(map(float, line))
    student_marks[name] = scores
query_name = input()
ave =  sum(student_marks[query_name]) / len(student_marks[query_name])
print ('%.2f'% ave)

/*
('%.2f'% ave)- round the answer to 2 decimal place.
*/

or 

student_marks = {}
for _ in range(int(input())):
    name = input().split()
    student_marks[name[0]] = sum(map(float,name[1:])) / (len(name)-1)
print ('%.2f'% student_marks[input()])

/*
name will be a list of string, first value is the name and rests are scores
student_marks[name[0]] - will set the name as the key of the dictionary.
sum(map(float,name[1:])) - convert the score to float and sum them.

print ('%.2f'% student_marks[input()]) - user input here will triger the code above

*/
